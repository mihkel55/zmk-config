/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HOST_OS 1
#include "zmk-helpers/helper.h"

/* Estonian letters */
ZMK_UNICODE_PAIR(   ee_ae,      N0, N0,  E, N4,    N0, N0,  C, N4) // ä/Ä
ZMK_UNICODE_PAIR(   ee_oe,      N0, N0,  F, N6,    N0, N0,  D, N6) // ö/Ö
ZMK_UNICODE_PAIR(   ee_ue,      N0, N0,  F,  C,    N0, N0,  D,  C) // ü/Ü
ZMK_UNICODE_PAIR(   ee_o_tilde, N0, N0,  F,  N5,   N0, N0,  D, N5) // õ/Õ

#define ___ &trans
#define XXX &none

// layers
#define ENGRAMMER 0
#define FACTORY 1
#define LOWER 2
#define MAGIC 3
#define SYMB 4
#define NUM 5
#define FUNC 6


// For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
// Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
// 
#define TAPPING_RESOLUTION 200 

//
// SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)
// the space thumb key to activate.  Shorter holds are treated as taps.
//
//
#define SPACE_HOLDING_TIME (TAPPING_RESOLUTION + 20)

//
// SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.
//
#define SPACE_REPEAT_DECAY TAPPING_RESOLUTION

//
// THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)
// a thumb key to activate a layer.  Shorter holds are treated as taps.
//
#define THUMB_HOLDING_TIME (TAPPING_RESOLUTION + 50)

//
// THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)
// after tapping a key to hold it again in order to make it auto-repeat.
//
#define THUMB_REPEAT_DECAY (TAPPING_RESOLUTION + 150)

ZMK_HOLD_TAP(hml,
    hold-trigger-key-positions = <16 6 18 6 7 18 19 30 31 42 43 60 61 5 16 17 28 29 40 41 55 56 57 58 59 72 73 74 75 8 9 18 19 20 21 30 31 32 33 42 43 44 45 60 61 62 63 76 77 78 79 52 53 54 70 71 69>;
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
    hold-trigger-on-release;
    retro-tap;
  )

ZMK_HOLD_TAP(hmr,
    hold-trigger-key-positions = <0 1 2 3 4 12 13 14 15 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 53 54 64 65 66 67 68 69 70 71 55 56 57 72 73 74>;
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
    hold-trigger-on-release;
    retro-tap;
  )

  ZMK_TAP_DANCE(layer_td,
    tapping-term-ms = <200>;
    bindings = <&mo 2>, <&to 2>;
  )

  ZMK_HOLD_TAP(thumb,
    flavor = "balanced";
    tapping-term-ms = <THUMB_HOLDING_TIME>;
    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat
    bindings = <&mo>, <&kp>;
    retro-tap;
  )

  ZMK_HOLD_TAP(space,
    flavor = "balanced";
    tapping-term-ms = <THUMB_HOLDING_TIME>;
    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat
    bindings = <&mo>, <&kp>;
  )
  ZMK_MACRO(bt_0,
      bindings = <&out OUT_BLE &bt BT_SEL 0>;
  )

  ZMK_MACRO(bt_1,
      bindings = <&out OUT_BLE &bt BT_SEL 1>;
  )

  ZMK_MACRO(bt_2,
      bindings = <&out OUT_BLE &bt BT_SEL 2>;
  )

  ZMK_MACRO(bt_3,
      bindings = <&out OUT_BLE &bt BT_SEL 3>;
  )


ZMK_LAYER(engrammer,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp DOWN_ARROW &kp UP_ARROW &kp A           &kp B         &kp C                                                                                                                                   &kp D         &kp E         &kp F      &kp LEFT_ARROW &kp RIGHT_ARROW
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp EQUAL       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                                                                                      &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp GRAVE       &kp B         &kp Y         &kp O         &kp U         &kp SQT                                                                                                     &kp SEMI      &kp L         &kp D         &kp W         &kp V         &kp Z
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼────────────┼─────────────┼─────────────┼─────────────┤
     &kp Z           &hml LGUI C &hml LALT I     &hml LCTRL E &hml LSHFT A &kp COMMA                                                                                                     &kp DOT       &hmr RSHFT H &hmr RCTRL T &hmr RALT S     &hmr RWIN N &kp Q
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &sk LSHFT       &kp G         &kp X         &kp J         &kp K         &kp MINUS    &thumb FUNC ESC &kp LC(C)       &kp LC(V)      &kp RSHIFT     &kp RCTRL       &kp ENTER        &kp FSLH      &kp R         &kp M         &kp F         &kp P         &ee_o_tilde
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &mo MAGIC       &kp GRAVE     &kp LBKT      &kp RBKT      &sk LSHFT                  &thumb NUM BACKSPACE &kp LC(B) &thumb FUNC DELETE &kp LALT  &thumb SYMB TAB &space SYMB SPACE                &kp LS(LPAR) &kp LS(RPAR) &ee_ue          &ee_oe        &ee_ae
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

// -------------------------------------------------------------------------------------------------------------------------------
// |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
// |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
// |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
// |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
// | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |
ZMK_LAYER(factory,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                                                                                                                  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp EQUAL       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                                                                                      &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T                                                                                                       &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp ESC         &kp A         &kp S         &kp D         &kp F         &kp G                                                                                                       &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp GRAVE       &kp Z         &kp X         &kp C         &kp V         &kp B           &kp LSHFT     &kp LCTRL      &layer_td        &kp LGUI      &kp RCTRL      &kp RSHFT        &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp PG_UP
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &mo MAGIC       &kp HOME      &kp END       &kp LEFT      &kp RIGHT                     &kp BSPC      &kp DEL        &kp LALT         &kp RALT      &kp RET        &kp SPACE                      &kp UP        &kp DOWN      &kp LBKT      &kp RBKT      &kp PG_DN
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(lower,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp C_BRI_DN    &kp C_BRI_UP &kp C_PREV     &kp C_NEXT    &kp C_PP                                                                                                                                &kp C_MUTE    &kp C_VOL_DN &kp C_VOL_UP &none        &kp PAUSE_BREAK
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &none         &none         &none         &none         &kp HOME                                                                                                    &kp LPAR      &kp KP_NUM    &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp PSCRN
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &none         &none         &kp UP        &none         &kp END                                                                                                     &kp RPAR      &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS &kp SLCK
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &none         &kp LEFT      &kp DOWN      &kp RIGHT     &kp PG_UP                                                                                                   &kp PRCNT     &kp KP_N4     &kp KP_N5     &kp KP_N6     &kp KP_PLUS &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &kp K_CMENU &none           &kp F11       &kp F12       &kp PG_DN       &trans        &trans         &to 1            &trans        &trans         &trans           &kp COMMA     &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_ENTER &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &kp CAPS      &kp INS       &kp F11       &kp F12                       &trans        &trans         &trans           &trans        &trans         &trans                         &kp KP_N0     &kp KP_N0     &kp KP_DOT    &kp KP_ENTER &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(magic,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &bt BT_CLR      &none         &none         &none         &none                                                                                                                                   &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &to 0           &to 1         &to 2         &none         &none         &none                                                                                                       &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none        &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                                        &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &bootloader  &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                                        &none         &none         &none         &none         &none         &bootloader
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &sys_reset      &none         &none         &none         &none         &none           &bt_2         &bt_3          &none            &none         &none          &none            &none         &none         &none         &none         &none         &sys_reset
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none           &none         &none         &none         &none                         &bt_0         &bt_1          &out OUT_USB     &none         &none          &none                          &none         &none         &none         &none         &none
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(symbols,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans          &trans        &trans        &trans        &trans                                                                                                                                  &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp GRAVE       &kp LBKT      &kp LPAR      &kp RPAR      &kp RBKT      &kp DOT                                                                                                     &kp GRAVE     &sk RSHFT     &sk RCTRL     &sk RALT      &sk RGUI      &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp EXCL        &kp COMMA     &kp LBRC      &kp RBRC      &kp SEMI      &kp QMARK                                                                                                   &kp GRAVE     &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp HASH        &kp CARET     &kp EQUAL     &kp UNDER     &kp DLLR      &kp STAR                                                                                                    &kp LS(DQT) &kp BSPC        &kp TAB       &kp SPACE     &kp RET       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp TILDE       &kp LT        &kp PIPE      &kp MINUS     &kp GT        &kp FSLH        &kp BSLH      &kp DOT        &kp STAR         &kp N8        &trans         &trans           &kp LS(STAR) &kp DEL        &kp LS(TAB) &kp ESC         &kp ESC       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &kp LS(AMPS) &kp SQT        &kp LS(DQT) &kp LS(PLUS)                    &kp LS(PRCNT) &kp LS(COLON) &kp LS(AT)        &kp N2        &trans         &trans                         &trans        &trans        &trans        &trans        &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(numbers,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans          &trans        &trans        &trans        &trans                                                                                                                                  &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp ESC         &kp RET       &kp SPACE     &kp TAB       &kp DEL       &kp HOME                                                                                                    &kp LS(TILDE) &kp LS(CARET) &kp LS(POUND) &kp LS(DLLR) &kp LS(EXCL) &kp LS(AT)
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &sk A           &sk LSHFT     &trans        &trans        &trans        &sk D                                                                                                       &kp LS(G)     &kp N7        &kp N8        &kp N9        &kp LS(COLON) &kp SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &sk B           &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHFT     &sk E                                                                                                       &kp K         &kp N4        &kp N5        &kp N6        &kp MINUS     &kp LS(PLUS)
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &sk X         &sk F           &trans        &trans         &trans           &kp LS(LT)    &kp LS(GT)     &kp EQUAL        &kp J         &kp N1        &kp N2        &kp N3        &kp FSLH      &kp LS(STAR)
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &sk LS(UNDER)                 &sk MINUS     &trans         &trans           &kp COMMA     &kp DOT        &kp N0                         &kp LBKT      &kp LS(LPAR) &kp LS(RPAR) &kp RBKT        &kp BSLH
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(function,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans          &trans        &trans        &trans        &trans                                                                                                                                  &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp ESC         &kp ENTER     &kp SPACE     &kp TAB       &kp DEL       &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &kp F7        &kp F8        &kp F9        &kp F10       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &kp F4        &kp F5        &kp F6        &kp F11       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &trans        &trans          &trans        &trans         &trans           &trans        &trans         &trans           &trans        &kp F1        &kp F2        &kp F3        &kp F12       &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans          &trans        &trans        &trans        &trans                        &trans        &trans         &trans           &trans        &trans         &trans                         &trans        &trans        &trans        &trans        &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)
